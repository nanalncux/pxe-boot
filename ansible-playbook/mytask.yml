- name: Install packages
  hosts: dhcp

  tasks:
    - name: Enabled Forwarding
      shell: echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf
    - name: mkdir tftpboot grub
#      shell: mkdir /var/lib/tftpboot
      ansible.builtin.file: path=/var/lib/tftpboot state=directory mode='0755'
    - name: mkdir grub
#      shell: mkdir /var/lib/tftpboot/grub
      ansible.builtin.file: path=/var/lib/tftpboot/grub state=directory mode='0755'
    - name: Install isc-dhcp-server
      apt: name=isc-dhcp-server state=latest
    - name: Install tftpd-hpa
      apt: name=tftpd-hpa state=latest
    - name: Install Nginx
      apt: name=nginx state=latest
    - name: Install rsync
      apt: name=rsync state=latest
    - name: isc-dhcp-stoping
      ansible.builtin.service: name=isc-dhcp-server state=stopped enabled=yes


    - name: Remove Config Files
      ansible.builtin.file: path={{ item }} state=absent
      with_items:
        - '/etc/dhcp/dhcpd.conf'
        - '/etc/default/isc-dhcp-server'
        - '/etc/nginx/sites-available/default'
    - name: Copy config files (dhcp,tftp,nginx,iptables,grub,uefi,preseed)
      ansible.builtin.copy: src={{item.src}} dest={{item.dest}} owner={{item.owner}} group={{item.group}} mode={{item.mode}}
      with_items:
        - {src: '../isc-dhcp-server/dhcpd.conf', dest: '/etc/dhcp/', owner: root, group: root, mode: '0644'}
        - {src: '../isc-dhcp-server/isc-dhcp-server', dest: '/etc/default/', owner: root, group: root, mode: '0644'}
        - {src: '../tftp-hpa/tftpd-hpa', dest: '/etc/default/tftpd-hpa', owner: root, group: root, mode: '0644'}
        - {src: '../nginx/pxe-tftp-web-conf', dest: '/etc/nginx/sites-available/default', owner: root, group: root, mode: '0644'}
        - {src: '../iptables-rules/iptables-rules', dest: '/etc/iptables', owner: root, group: root, mode: '0740'}
        - {src: '../iptables-rules/iptables-preup.sh', dest: '/etc/network/if-pre-up.d/iptables', owner: root, group: root, mode: '0755'}
        - {src: '../wget-unzip-netboot.sh', dest: '/root/wget-unzip-netboot.sh', owner: root, group: root, mode: '0755'}
        - {src: '../uefiboot/grub/font.pf2', dest: '/var/lib/tftpboot/grub', owner: root, group: root, mode: '0744'}
        - {src: '../uefiboot/grub/grub.cfg', dest: '/var/lib/tftpboot/grub', owner: root, group: root, mode: '0744'}
        - {src: '../uefiboot/bootx64.efi', dest: '/var/lib/tftpboot', owner: root, group: root, mode: '0644'}
        - {src: '../uefiboot/grubx64.efi', dest: '/var/lib/tftpboot', owner: root, group: root, mode: '0644'}
        - {src: '../preseed/oem.seed', dest: '/var/lib/tftpboot', owner: root, group: root, mode: '0644'}
        - {src: '../preseed/cloud-init/user-data', dest: '/var/lib/tftpboot', owner: root, group: root, mode: '0644'}
        - {src: '../preseed/cloud-init/meta-data', dest: '/var/lib/tftpboot', owner: root, group: root, mode: '0644'}
        - {src: '../iface-get-static.sh', dest: '/var/lib/tftpboot', owner: root, group: root, mode: '0755'}
    - name: Run upload ubuntu installer
      shell: /bin/bash /root/wget-unzip-netboot.sh

    - name: Change grub bios
      ansible.builtin.copy: src='../biosboot/txt.cfg' dest='/var/lib/tftpboot/ubuntu-installer/amd64/boot-screens' owner=root group=root mode='0664'

    - name: Unconditionally reboot the machine with all defaults
      reboot: